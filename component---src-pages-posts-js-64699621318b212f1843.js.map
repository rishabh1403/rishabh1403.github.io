{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./src/components/Blog/BlogList.js","webpack:///./src/util/utils.js"],"names":["data","title","description","home","img","indexImage","childImageSharp","fluid","edges","groupByYear","allMarkdownRemark","query","BlogList","className","styles","blog","center","Object","keys","sort","reverse","map","edge","index","key","length","text","ed","el","date","fade","to","path","filter","node","frontmatter","draft","reduce","acc","year","push","shortDate"],"mappings":"0FAAA,8GAQe,0BAAGA,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UAAUC,YAAY,0EACjC,kBAAC,IAAD,CAAYC,MAAM,EAAMC,IAAKJ,EAAKK,WAAWC,gBAAgBC,QAE7D,kBAAC,IAAD,CAAUC,MAAOC,YAAYT,EAAKU,kBAAkBF,WAIjD,IAAMG,EAAK,c,oHCYHC,IAzBE,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAClB,OACE,6BAASK,UAAWC,IAAOC,MACzB,yBAAKF,UAAWC,IAAOE,QACpBC,OAAOC,KAAKV,GAAOW,OAAOC,UAAUC,KAAI,SAACC,EAAMC,GAC9C,OACE,yBAAKC,IAAKD,GACR,4BAAKD,EAAL,KAAkBd,EAAMc,GAAMG,OAA9B,KACA,yBAAKZ,UAAWC,IAAOY,MACpBlB,EAAMc,GAAMD,KAAI,SAACM,EAAIC,GACpB,OAAO,uBAAGJ,IAAKI,GACb,0BAAMf,UAAWC,IAAOe,MAAOF,EAAGE,MAClC,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAE,IAAMJ,EAAGK,KAAQnB,UAAWC,IAAOb,OAAnD,IAA4D0B,EAAG1B,oB,iCChBnF,kCAAO,IAAMQ,EAAc,SAACT,GA0B1B,OApBAA,EAAOA,EAAKiC,QAAO,SAAAX,GAAI,OAAoC,IAAhCA,EAAKY,KAAKC,YAAYC,UAChCC,QAAO,SAACC,EAAIV,GAE3B,IAAIW,EAAOX,EAAGM,KAAKC,YAAYI,KAe/B,OAdGD,EAAIC,GACLD,EAAIC,GAAMC,KAAK,CACbX,KAAMD,EAAGM,KAAKC,YAAYM,UAC1BxC,MAAO2B,EAAGM,KAAKC,YAAYlC,MAC3B+B,KAAMJ,EAAGM,KAAKC,YAAYH,QAG5BM,EAAIC,GAAQ,GACZD,EAAIC,GAAMC,KAAK,CACbX,KAAMD,EAAGM,KAAKC,YAAYM,UAC1BxC,MAAO2B,EAAGM,KAAKC,YAAYlC,MAC3B+B,KAAMJ,EAAGM,KAAKC,YAAYH,QAGvBM,IACP","file":"component---src-pages-posts-js-64699621318b212f1843.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport StyledHero from \"../components/StyledHero\"\nimport BlogList from '../components/Blog/BlogList';\nimport { groupByYear } from '../util/utils';\nimport SEO from '../components/SEO';\n\nexport default ({ data }) => (\n  <Layout>\n    <SEO title=\"Archive\" description=\"Archive page of Rishabh Jain's blog. List of all blogs on the website\" />\n    <StyledHero home={true} img={data.indexImage.childImageSharp.fluid}>\n    </StyledHero>\n    <BlogList edges={groupByYear(data.allMarkdownRemark.edges)} />\n  </Layout>\n)\n\nexport const query = graphql`\nquery{\n  indexImage:file(relativePath:{eq:\"archive.jpg\"}){\n    childImageSharp{\n      fluid(quality: 90, maxWidth:2000){\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n  allMarkdownRemark(sort:{order:DESC,fields:frontmatter___date}){\n    edges{\n      node{\n        frontmatter{\n          title\n          path\n          draft\n          shortDate:date(formatString: \"MMM Do\")\n          year:date(formatString: \"YYYY\")\n        }\n        fields{\n          readingTime{\n            text\n          }\n        }\n      }\n    }\n  }\n}\n`;","import React from 'react'\nimport styles from '../../css/blogList.module.css'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nconst BlogList = ({ edges }) => {\n  return (\n    <section className={styles.blog}>\n      <div className={styles.center}>\n        {Object.keys(edges).sort().reverse().map((edge, index) => {\n          return (\n            <div key={index}>\n              <h2>{edge}&nbsp;({edges[edge].length})</h2>\n              <div className={styles.text}>\n                {edges[edge].map((ed, el) => {\n                  return <p key={el}>\n                    <span className={styles.date}>{ed.date}</span>\n                    <AniLink fade to={`/${ed.path}`} className={styles.title}> {ed.title}</AniLink>\n                  </p>\n                })}\n              </div>\n            </div>\n          )\n\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default BlogList\n","export const groupByYear = (data) => {\n  // let datas = {\n  //   '2019':[],\n  //   '2018': [],\n    \n  // }\n  data = data.filter(edge => edge.node.frontmatter.draft === false)\n  const ans = data.reduce((acc,el) => {\n    // console.log(acc);\n    let year = el.node.frontmatter.year\n    if(acc[year]){\n      acc[year].push({\n        date: el.node.frontmatter.shortDate,\n        title: el.node.frontmatter.title,\n        path: el.node.frontmatter.path\n      });\n    }else{\n      acc[year] = [];\n      acc[year].push({\n        date: el.node.frontmatter.shortDate,\n        title: el.node.frontmatter.title,\n        path: el.node.frontmatter.path\n      });\n    }\n    return acc;\n  },{});\n  return ans;\n}\n\n"],"sourceRoot":""}